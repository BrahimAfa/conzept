======  architecture ======

The main architectural choices made in the Conzept application are:

  * Keep things **__simple__**, **web native**, **live** and **fun to code and maintain.**  Performance is secondary.
 
  * Value the **[[explore>user experience]] above all else.**

  * Use **embedded iframes** (and self-hosted app URLs) as a form of very simple, well-isolated 'micro-services'. However, to the user Conzept should //feel// as one application. The benefits this simple composition mechanism brings, is very good compatibility with most of the web-tools already written and the ones still to be written! See also: [[https://github.com/oilshell/oil/wiki/Perlis-Thompson-Principle|Perlis-Thompson principle]], [[https://www.oilshell.org/blog/2022/02/diagrams.html|narrow-waist concept]].

  * Use **declarative data definitions** where possible (examples: [[section_customization|sections]], [[field_customization|fields]], topic headlines, [[topic_classification|topic tags and indicators]]). Avoid code duplication (low entropy, horizontal/planer code growth) where possible, instead use use expressive data structures parsed by minimal code. Editing textual data-structures is also a lot easier than editing code, and also allows for text-tools to automate some of these tasks.

  * The communication between Conzept and [[used_projects#embedded_apps|embedded apps]] is done using **URL-parameters** (examples: title-string, entity ID, ISO2/3 language code, URL) and **postMessage() function calls**.
    * Note: Some styling of embedded apps is also applied by directly setting common CSS classes on the body-element of the iframe (such as the "dark" class for dark-mode styles, or the "rtl" class for right-to-left language-scripts).

  * **Use vanilla JS** (avoid complex [[https://catonmat.net/frameworks-dont-make-sense|frameworks]] inverting control), with jQuery for managing the DOM.
    * jQuery - and the jQuery-dependent plugins - may be removed or replaced in the future, if possible and beneficial.
    * When needed: use [[explore>WebAssembly]] for performance-demanding, compute parts in the code.
    * If some (relatively complex) HTML-widget needs to be used in many different places: consider creating a **[[explore>Web Components|web component]]**. This was done for the [[apps#organism_occurrence_map|organism occurrence map]].

  * Main types of data-types to use: **plain strings, URLs, entity ID's, JSON and lists of JavaScript objects.**

  * Allow the **safe use of [[explore>Eval|eval()]]** needed for flexible [[field_customization|field definitions]]. This is safe, as only the admins/devs can update the field definitions. Conzept is also a mainly client-side application, with no user-data being stored on the server.

===== URL structure =====

Conzept is mainly based around URLs and iframes.

Let's first look at some example URLs and then look at all the available parameters.
==== example URLs ====

  * [[https://conze.pt/explore/Semantic%20Web|conze.pt/explore/Semantic_Web]] (Minimal URL with a query-string. The user-language will be based on: the stored language setting, the browser language or simply fallback to English.)

  * [[https://conze.pt/explore/Semantic%20Web?l=en&t=wikipedia&s=true|conze.pt/explore/Semantic_Web?l=en&t=wikipedia&s=true]] (Explicit request for the English language)
  * [[https://conze.pt/explore/Semantic%20Web?l=de&t=wikipedia&s=true|conze.pt/explore/Semantic_Web?l=de&t=wikipedia&s=true]] (Explicit request for the German language)

  * [[https://conze.pt/explore/?l=en&t=wikipedia-qid&i=Q5483435&s=true|conze.pt/explore/?l=en&t=wikipedia-qid&i=Q5483435&s=true]] (Load a certain Wikidata Q-ID topic. It will try to load it as a Wikipedia article, or else fallback to showing the Wikidata page.)

  * [[https://conze.pt/explore/Semantic%20Web?l=en&t=link&i=Q54837&u=%2Fapp%2Fvideo%2F%23%2Fsearch%2F%22Semantic%20Web%22&s=true|conze.pt/explore/Semantic_Web?l=en&t=link&i=Q54837&u=/app/video/#/search/"Semantic_web"]] (Loads the video-app in the content pane.)

  * [[https://conze.pt/explore/Semantic%20Web?l=de&t=link-split&i=Q54837&u=%2Fapp%2Flinks%2F%3Fl%3Dde%26t%3DSemantic%2520Web&s=true|conze.pt/explore/Semantic_Web?l=de&t=link-split&i=Q54837&u=/app/links/?l=de&t=Semantic_Web&s=true]] (Link-split example loading the link-graph app, for the German language.)



==== URL parameters ====

There are various parameters available to structure URLs.

^ parameter  ^ description    ^ default value      ^
| **l** | language | "en" |
| **t** | action-type | "wikipedia" (note: will be renamed to "string" in the future) |
| **i** | entity ID (such as the Wikidata Q-identifier) | |
| **u**  | URL-string | |
| **c**  | custom data | |
| **s** | sidebar visibility | true |
| **v** | view-mode requested, can be "desktop" or "mobile" | (note: automatically determined by the device type, but can be overruled) |
| **c**  | custom data field (its format is not specified)| |


===== URL action types =====

The types parameter ("**t**") in Conzept URLs indicated what type of content should be loaded.

The following action-types are available:

^ type      ^ argument data-type ^ description       ^
| **wikipedia** | string | request the Wikipedia page |
| **wikipedia-qid** | Wikidata qid | request the Wikipedia or the Wikidata page (in that order) |
| **link-split** | url |load two content panes and load the URL into the first content pane, in the second-content pane load the Wikipedia page for the search-string |
| **articles** | string | (only used internally) to update the sidebar with a new string-search (and not update the content area) |
| **random** | string | (only used internally) to load a random Wikipedia topic |
| **wander** | string | loads the Wander-app to show a series of YouTube videos (note: this type may be removed in the future) |
