"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addRootSiblingsPositions = void 0;
var getNodeRightX_1 = require("./getNodeRightX");
var getFromMap_1 = require("./getFromMap");
var addRootSiblingsPositions = function (root, settings, map) {
    if (root[settings.nextBeforeAccessor])
        getFromMap_1.getFromMap(root[settings.nextBeforeAccessor], map)
            .reverse()
            .forEach(function (currentNode, nextBeforeIndex, nextBefores) {
            var previousNode = nextBefores[nextBeforeIndex - 1] || root;
            if (settings.orientation === "vertical") {
                currentNode.x =
                    previousNode.x - currentNode.width - currentNode.marginRight;
                //align vertically
                currentNode.y = root.y + root.height / 2 - currentNode.height / 2;
                var currentBottomY = currentNode.y + currentNode.height + currentNode.marginBottom;
                if (currentNode.y < root.groupTopY)
                    root.groupTopY = currentNode.y;
                if (currentBottomY > root.groupBottomY)
                    root.groupBottomY = currentBottomY;
            }
            else {
                currentNode.y =
                    previousNode.y - currentNode.height - currentNode.marginBottom;
                //align horizontally
                currentNode.x = root.x + root.width / 2 - currentNode.width / 2;
                var currentRightEdgeX = getNodeRightX_1.getNodeRightX(currentNode);
                if (currentNode.x < root.groupLeftX)
                    root.groupLeftX = currentNode.x;
                if (currentRightEdgeX > root.groupRightX)
                    root.groupRightX = currentRightEdgeX;
            }
        });
};
exports.addRootSiblingsPositions = addRootSiblingsPositions;
//# sourceMappingURL=addRootSiblingsPositions.js.map