"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.layoutFromMap = void 0;
var addGroupBottomY_1 = require("./addGroupBottomY");
var addGroupLeftX_1 = require("./addGroupLeftX");
var addGroupRightX_1 = require("./addGroupRightX");
var addGroupTopY_1 = require("./addGroupTopY");
var addLevelNodesSizes_1 = require("./addLevelNodesSizes");
var addRootSiblingsPositions_1 = require("./addRootSiblingsPositions");
var addRootSpousesPositions_1 = require("./addRootSpousesPositions");
var defaultSettings_1 = require("./defaultSettings");
var drillChildren_1 = require("./drillChildren");
var drillParents_1 = require("./drillParents");
var getElements_1 = require("./getElements");
var makeRoot_1 = require("./makeRoot");
var normalizeTree_1 = require("./normalizeTree");
function layoutFromMap(rootId, originalMap, customSettings) {
    if (customSettings === void 0) { customSettings = {}; }
    var settings = __assign(__assign({}, defaultSettings_1.defaultSettings), customSettings);
    var map = settings.clone
        ? JSON.parse(JSON.stringify(originalMap))
        : originalMap;
    var root = makeRoot_1.makeRoot(map[rootId], settings);
    addLevelNodesSizes_1.addLevelNodesSizes([root], settings, map);
    addRootSiblingsPositions_1.addRootSiblingsPositions(root, settings, map);
    addRootSpousesPositions_1.addRootSpousesPositions(root, settings, map);
    addGroupBottomY_1.addGroupBottomY(root, settings, map);
    addGroupRightX_1.addGroupRightX(root, settings, map);
    addGroupLeftX_1.addGroupLeftX(root, settings, map);
    addGroupTopY_1.addGroupTopY(root, settings, map);
    drillChildren_1.drillChildren(root, settings, map);
    normalizeTree_1.normalizeTree(root, settings.targetsAccessor, settings, map);
    drillParents_1.drillParents(root, settings, map);
    normalizeTree_1.normalizeTree(root, settings.sourcesAccessor, settings, map);
    return getElements_1.getElements(root, settings, map);
}
exports.layoutFromMap = layoutFromMap;
//# sourceMappingURL=layoutFromMap.js.map